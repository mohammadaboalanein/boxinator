{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadaboalanein/Documents/react_projects/myboxinator/client/src/views/ListBoxes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport DataTable from '../components/DataTable';\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListBoxes() {\n  _s();\n\n  const [loadingData, setLoadingData] = useState(true);\n  const columns = useMemo(() => [{\n    Header: \"Receiver\",\n    accessor: \"receiver\"\n  }, {\n    Header: \"Weight\",\n    accessor: \"weight\"\n  }, {\n    Header: \"Box Colour\",\n    accessor: \"color\",\n    Cell: row => {\n      row.styles['backgroundColor'] = row.value;\n      return \"\";\n    }\n  }, {\n    Header: \"Shipping cost\",\n    accessor: \"cost\"\n  }]);\n  const cost = {\n    \"Sweden\": 1.3,\n    \"China\": 4,\n    \"Brazil\": 8.6,\n    \"Australia\": 7.4\n  };\n  const spainSymbol = {\n    \"Sweden\": \"SEK\",\n    \"China\": \"CNY\",\n    \"Brazil\": \"BRL\",\n    \"Australia\": \"AUD\"\n  };\n  const [data, setData] = useState([]);\n\n  function componentFromStr(numStr, percent) {\n    var num = Math.max(0, parseInt(numStr, 10));\n    return percent ? Math.floor(255 * Math.min(100, num) / 100) : Math.min(255, num);\n  }\n\n  function rgbToHex(rgb) {\n    var rgbRegex = /^rgb\\(\\s*(-?\\d+)(%?)\\s*,\\s*(-?\\d+)(%?)\\s*,\\s*(-?\\d+)(%?)\\s*\\)$/;\n    var result,\n        r,\n        g,\n        b,\n        hex = \"\";\n\n    if (result = rgbRegex.exec(rgb)) {\n      r = componentFromStr(result[1], result[2]);\n      g = componentFromStr(result[3], result[4]);\n      b = componentFromStr(result[5], result[6]);\n      hex = \"0x\" + (0x1000000 + (r << 16) + (g << 8) + b).toString(16).slice(1);\n      console.log(result[5]);\n    }\n\n    return hex;\n  }\n\n  useEffect(() => {\n    async function getData() {\n      await Axios.get(\"http://localhost:3001/getboxes\").then(response => {\n        var list = [];\n        response.data.forEach(element => {\n          list.push({\n            id: element.id,\n            receiver: element.name,\n            weight: element.weight + \"kilograms\",\n            color: element.color,\n            cost: element.weight * cost[element.country] + \" \" + spainSymbol[element.country]\n          });\n        });\n        console.log(response.data);\n        setData(list);\n        setLoadingData(false);\n      });\n    }\n\n    if (loadingData) {\n      // if the result is not ready so you make the axios call\n      getData();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loadingData ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListBoxes, \"S15R9+c6B+dNPB/Qfgi0ZzOKUcA=\");\n\n_c = ListBoxes;\nexport default ListBoxes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBoxes\");","map":{"version":3,"sources":["/Users/mohammadaboalanein/Documents/react_projects/myboxinator/client/src/views/ListBoxes.js"],"names":["React","useMemo","useState","useEffect","DataTable","Axios","ListBoxes","loadingData","setLoadingData","columns","Header","accessor","Cell","row","styles","value","cost","spainSymbol","data","setData","componentFromStr","numStr","percent","num","Math","max","parseInt","floor","min","rgbToHex","rgb","rgbRegex","result","r","g","b","hex","exec","toString","slice","console","log","getData","get","then","response","list","forEach","element","push","id","receiver","name","weight","color","country"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useEffect } from \"react\";\nimport DataTable from '../components/DataTable';\nimport Axios from \"axios\";\n\nfunction ListBoxes() {\n  const [loadingData, setLoadingData] = useState(true);\n  const columns = useMemo(() => [\n    {\n      Header: \"Receiver\",\n      accessor: \"receiver\",\n    },\n    {\n      Header: \"Weight\",\n      accessor: \"weight\",\n    },\n    {\n      Header: \"Box Colour\",\n      accessor: \"color\",\n      Cell: row => {\n        row.styles['backgroundColor'] = row.value;\n        return \"\";\n      }\n    },\n    {\n      Header: \"Shipping cost\",\n      accessor: \"cost\",\n    }\n  ]);\n  const cost = {\n    \"Sweden\": 1.3,\n    \"China\": 4,\n    \"Brazil\": 8.6,\n    \"Australia\": 7.4\n  };\n\n  const spainSymbol = {\n    \"Sweden\": \"SEK\",\n    \"China\": \"CNY\",\n    \"Brazil\": \"BRL\",\n    \"Australia\": \"AUD\"\n  };\n  const [data, setData] = useState([]);\n\n  function componentFromStr(numStr, percent) {\n    var num = Math.max(0, parseInt(numStr, 10));\n    return percent ?\n        Math.floor(255 * Math.min(100, num) / 100) : Math.min(255, num);\n}\nfunction rgbToHex(rgb) {\n    var rgbRegex = /^rgb\\(\\s*(-?\\d+)(%?)\\s*,\\s*(-?\\d+)(%?)\\s*,\\s*(-?\\d+)(%?)\\s*\\)$/;\n    \n    var result, r, g, b, hex = \"\";\n    if ( (result = rgbRegex.exec(rgb)) ) {\n        r = componentFromStr(result[1], result[2]);\n        g = componentFromStr(result[3], result[4]);\n        b = componentFromStr(result[5], result[6]);\n        \n        hex = \"0x\" + (0x1000000 + (r << 16) + (g << 8) + b).toString(16).slice(1);\n        console.log(result[5]);\n    }\n    return hex;\n}\n\n  useEffect(() => {\n    async function getData() {\n      await Axios\n        .get(\"http://localhost:3001/getboxes\")\n        .then((response) => {\n          var list = [];\n          response.data.forEach((element) => {\n            list.push(\n              {\n                id: element.id,\n                receiver: element.name,\n                weight: element.weight + \"kilograms\",\n                color: element.color,\n                cost: element.weight * cost[element.country]\n                  + \" \" + spainSymbol[element.country]\n              }\n            );\n          })\n          console.log(response.data);\n          setData(list);\n          setLoadingData(false);\n        });\n    }\n    if (loadingData) {\n      // if the result is not ready so you make the axios call\n      getData();\n    }\n  }, []);\n\n\n\n  return (\n    <div className=\"App\">\n      {/* here you check if the state is loading otherwise if you wioll not call that you will get a blank page because the data is an empty array at the moment of mounting */}\n      {loadingData ? (\n        <p>Loading Please wait...</p>\n      ) : (\n        <DataTable columns={columns} data={data} />\n      )}\n    </div>\n  );\n}\n\nexport default ListBoxes;\n\n"]},"metadata":{},"sourceType":"module"}